/*
 * Copyright 2020-2021. Huawei Technologies Co., Ltd. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
using System;
using System.Runtime.InteropServices;
using Foundation;
using ObjCRuntime;

namespace Huawei.Hms.Analytics
{
    /// <summary>
    /// Provides the IDs of all predefined parameters, including the IDs of predefined parameters and user attributes.
    /// </summary>
    public static class HAParamType
    {
        //Store of the product added to favorites.
        public static string StoreName = "StoreName";

        //Brand of the product added to favorites.
        public static string Brand = "Brand";

        //Category of the product added to favorites.
        public static string Category = "Category";

        //ID of the product added to the shopping cart.
        public static string ProductId = "ProductId";

        //Name of the product added to the shopping cart.
        public static string ProductName = "ProductName";

        //Features of the associated product.
        public static string ProductFeature = "ProductFeature";

        //Product price.
        public static string Price = "Price";

        //Number of products purchased by a user.
        public static string Quantity = "Quantity";

        //Revenue you receive through the transaction.
        public static string Revenue = "Revenue";

        //Revenue currency type. This parameter must be used with Revenue.
        public static string CurrName = "CurrName";

        //ID of the product location.
        public static string PlaceId = "PlaceId";

        //User destination for a hotel reservation.
        public static string Destination = "Destination";

        //User check-out date for a hotel reservation.
        public static string EndDate = "EndDate";

        //Number of days a user books for a hotel reservation.
        public static string BookingDays = "BookingDays";

        //Number of guests a user books for a hotel reservation.
        public static string PassengersNumber = "PassengersNumber";

        //Number of rooms a user books for a hotel reservation.
        public static string BookingRooms = "BookingRooms";

        //User departure location for a hotel reservation.
        public static string OriginatingPlace = "OriginatingPlace";

        //User check-in date for a hotel reservation.
        public static string BeginDate = "BeginDate";

        //Transaction ID generated by your transaction system.
        public static string TransactionId = "TransactionId";

        //Level of a room booked by a user for a hotel reservation.
        public static string Class = "Class";

        //ID generated by the ad network and used to record ad clicks.
        public static string ClickId = "ClickId";

        //Name of a marketing activity.
        public static string PromotionName = "PromotionName";

        //Marketing content of a marketing activity.
        public static string Content = "Content";

        //Custom parameter.
        public static string Extend = "Extend";

        //Name of the creative material used in a marketing activity.
        public static string MaterialName = "MaterialName";

        //ID of the slot where a creative material is displayed.
        public static string MaterialSlot = "MaterialSlot";

        //Type of a marketing activity, for example, CPC or email.
        public static string Medium = "Medium";

        //ID of a marketing activity provider, for example, HUAWEI PPS.
        public static string Source = "Source";

        //Search string or keyword.
        public static string Keywords = "Keywords";

        //Check-out option entered by a user in the current check-out step.
        public static string Option = "Option";

        //Current step of a user in the check-out process.
        public static string Step = "Step";

        //Shipping fee generated for the transaction.
        public static string VirtualCurrName = "VirtualCurrName";

        //Departure date, hotel check-in date, or lease start date.
        public static string Voucher = "Voucher";

        //ID of the product location.
        public static string Place = "Place";

        //Shipping fee generated for the transaction.
        public static string Shipping = "Shipping";

        //Tax generated for the transaction.
        public static string TaxFee = "TaxFee";

        //ID of the user group that a user joins.
        public static string UserGroupId = "UserGroupId";

        //Name of a game level.
        public static string LevelName = "LevelName";

        //Operation result.
        public static string Result = "Result";

        //Role of a user.
        public static string RoleName = "RoleName";

        //Game level.
        public static string LevelId = "LevelId";

        //Indicates the particular method used in an operation. For example, facebook or email in the context of a sign-up or sign-in event.
        public static string Channel = "Channel";

        //Score in a game.
        public static string Score = "Score";

        //Search string or keyword.
        public static string SearchKeywords = "SearchKeywords";

        //Content type selected by a user.
        public static string ContentType = "ContentType";

        //ID of an achievement.
        public static string AchievementId = "AchievementId";

        //Flight number generated by your transaction system.
        public static string FlightNo = "FlightNo";

        //Index of a product in the list.
        public static string PositionId = "PositionId";

        //Product list displayed to a user.
        public static string ProductList = "ProductList";

        //Achievement ID.
        public static string ArchievementId = "ArchievementId";

        //Account type of a user, for example, email or mobile number.
        public static string AcountType = "AcountType";
        //Sign-in result.
        public static string EvtResult = "EvtResult";

        //Level before the change.
        public static string PrevLevel = "PrevLevel";

        //Current level.
        public static string CurrvLevel = "CurrvLevel";

        //Reason for changing or canceling an order.
        public static string Reason = "Reason";

        //Names of vouchers applicable to a product.
        public static string Vouchers = "Vouchers";

        //Product ID list.
        public static string ListId = "ListId";

        //Filter condition.
        public static string Filters = "Filters";

        //Sorting condition.
        public static string Sorts = "Sorts";

        //Order ID generated by your transaction system.
        public static string OrderId = "OrderId";

        //Payment mode selected by a user.
        public static string PayType = "PayType";

        //Expiration time of a voucher.
        public static string ExpireDate = "ExpireDate";

        //Voucher type.
        public static string VoucherType = "VoucherType";

        //Type of a service provided for a user, for example, consultation or complaint.
        public static string ServiceType = "ServiceType";

        // Game duration.
        public static string Duration = "Duration";

        // Top-up entry.
        public static string PurchaseEntry = "PurchaseEntry";

        // Game level.
        public static string Level = "Level";

        // Entry.
        public static string Entry = "Entry";

        // Props.
        public static string Props = "Props";

    }

    /// <summary>
    /// Provides the IDs of all predefined events.
    /// </summary>
    public static class HAEventType
    {
        /// Event reported when a user has added payment information but has not initiated payment during check-out.It can be used with StartCheckout and CompletePurchase to construct funnel analysis for the check-out process.
        public static string CreatePaymentInfo = "CreatePaymentInfo";

        /// Event reported when a user adds a product to the shopping cart.It can be used with ViewProduct and StartCheckout to construct funnel analysis for product purchase. It can also be used to analyze products that users are interested in, helping you promote the products to the users.
        public static string AddProduct2Cart = "AddProduct2Cart";

        /// Event reported when a user adds a product to wishlist.It can be used to analyze products that users are interested in, helping you promote the products to the users.
        public static string AddProduct2WishList = "AddProduct2WishList";

        /// Event reported when a user launches the app.
        public static string StartApp = "StartApp";

        /// Event reported when a user clicks the check-out button after placing an order. It can be used with ViewProduct and CompletePurchase to construct funnel analysis for the e-commerce purchase conversion rate.
        public static string StartCheckout = "StartCheckout";

        /// Event reported when a user views details of a marketing campaign. It can be used to analyze the conversion rate of a marketing campaign.
        public static string ViewCampaign = "ViewCampaign";

        /// Event reported after each step in the multi-step check-out process is completed. It can be used to analyze the conversion rate of each step in the check-out process, which helps you optimize the product design.
        public static string ViewCheckoutStep = "ViewCheckoutStep";

        /// Event reported when a user obtains virtual currency. It can be used to analyze the difficulty for users to obtain virtual currency, which helps you optimize the product design.
        public static string WinVirtualCoin = "WinVirtualCoin";

        /// Event reported after a user purchases a product. It can be used to analyze the products or contents that users are more interested in, which helps you optimize the operations policy.
        public static string CompletePurchase = "CompletePurchase";

        /// Event reported when a sales lead is obtained. For example, it can be reported after a user taps the ad you placed and fills in and submits the contact information. In this case, the event is used to evaluate the possible revenue brought by the lead to you. In addition, the event can also be used to evaluate the ROI of the placed ad.
        public static string ObtainLeads = "ObtainLeads";

        /// Event reported when a user joins in a group, for example, joining in a group chat in a social app. It can be used to evaluate the attractiveness of your product's social features to users.
        public static string JoinUserGroup = "JoinUserGroup";

        /// Event reported when a user completes a game level in a game app. It can be used with StartLevel to analyze whether the game level design is proper and formulate targeted optimization policies.f

        /// Event reported when a user starts a game level in a game app.It can be used with CompleteLevel to analyze whether the game level design is proper and formulate targeted optimization policies.
        public static string StartLevel = "StartLevel";

        /// Event reported when a user levels up in a game app. It can be used to analyze whether your product's user level design is optimal and formulate targeted optimization policies.
        public static string UpgradeLevel = "UpgradeLevel";

        /// Event reported when a user signs in to an app requiring sign-in. It can be used to analyze users' sign-in habits and formulate targeted operations policies.
        public static string SignIn = "SignIn";

        /// Event reported when a user submits the score in a game or education app. It can be used to analyze the difficulty of product content and formulate targeted optimization policies.
        public static string SubmitScore = "SubmitScore";

        /// Event reported when the order details are displayed before check-out. It can be used with events such as ViewProduct and CompletePurchase to construct an analysis funnel for analyzing user churn in each phase and make optimization policies.
        public static string CreateOrder = "CreateOrder";

        /// Event reported when the refund is successful for a user. It can be used to analyze loss caused by the refund and formulate targeted optimization policies.
        public static string RefundOrder = "RefundOrder";

        /// Event reported when a user removes a product from the shopping cart. It can be used for targeted marketing to the user.
        public static string DelProductFromCart = "DelProductFromCart";

        /// Event reported when a user searches for content in an app. It can be used with events such as ViewSearchResult and ViewProduct to analyze the accuracy of search results.
        public static string Search = "Search";

        /// Event reported when a user taps content, for example, tapping a product in the product list in an e-commerce app to view the product details. It can be used to analyze the products that users are interested in.
        public static string ViewContent = "ViewContent";

        /// Event reported when a user sets some check-out options during the check-out process. It can be used to analyze check-out preferences of users.
        public static string UpdateCheckoutOption = "UpdateCheckoutOption";

        /// Event reported when a user shares a product or content through a social channel. It can be used to analyze users' loyalty to the product.
        public static string ShareContent = "ShareContent";

        /// Event reported when a user registers an account. It can be used to analyze the user sources and optimize operations policies.
        public static string RegisterAccount = "RegisterAccount";

        /// Event reported when a user consumes virtual currency. It can be used to analyze the products that users are more interested in.
        public static string ConsumeVirtualCoin = "ConsumeVirtualCoin";

        /// Event reported when a user starts to use the tutorial. It can be used with CompleteTutorial to evaluate the tutorial quality and formulate targeted optimization policies.
        public static string StartTutorial = "StartTutorial";

        /// Event reported when a user completes the tutorial. It can be used with StartTutorial to evaluate the tutorial quality and formulate targeted optimization policies.
        public static string CompleteTutorial = "CompleteTutorial";

        /// Event reported when a user unlocks an achievement. It can be used to analyze whether the achievement level design is optimal and formulate targeted optimization policies.
        public static string ObtainAchievement = "ObtainAchievement";

        /// Event reported when a user browses a product. It can be used to analyze the products that users are interested in, or used with other events for funnel analysis.
        public static string ViewProduct = "ViewProduct";

        /// Event reported when a user browses a list of products, for example, browsing the list of products by category. It can be used to analyze the types of contents that users are more interested in.
        public static string ViewProductList = "ViewProductList";

        /// Event reported when a user views the search results. It can be used with ViewProduct and Search to measure the accuracy of the search algorithm.
        public static string ViewSearchResult = "ViewSearchResult";

        /// Event reported when a user purchases membership or signs in for the first time after membership expires. It can be used to analyze user habits.
        public static string UpdateMembershipLevel = "UpdateMembershipLevel";

        /// Event reported when a user sets conditions to filter products displayed. It can be used to analyze user preferences.
        public static string FiltrateProduct = "FiltrateProduct";

        /// Event reported when a user taps a product category. It can be used to analyze popular product categories or user preferences.
        public static string ViewCategory = "ViewCategory";

        /// Event reported when a user modifies an order.
        public static string UpdateOrder = "UpdateOrder";

        /// Event reported when a user cancels an order.
        public static string CancelOrder = "CancelOrder";

        /// Event reported when a user confirms the reception.
        public static string CompleteOrder = "CompleteOrder";

        /// Event reported when a user cancels an ongoing payment of a submitted order. It can be used to analyze the cause of user churn.
        public static string CancelCheckout = "CancelCheckout";

        /// Event reported when a user claims a voucher.
        public static string ObtainVoucher = "ObtainVoucher";

        /// Event reported when the quick start for a new user is opened.
        public static string NoviceGuideStart = "NoviceGuideStart";

        /// Event reported when the quick start for a new user is closed.
        public static string NoviceGuideEnd = "NoviceGuideEnd";

        /// Event reported when a game is started.
        public static string StartGame = "StartGame";

        /// Event reported when a game is ended.
        public static string EndGame = "EndGame";

        /// Event reported when props are added.
        public static string WinProps = "WinProps";

        /// Event reported when props are consumed.
        public static string ConsumeProps = "ConsumeProps";
    }

    
    public static class HAUserProfileType
    {
        ///User level. This attribute is used to identify the level of a user in an app that employs the user level hierarchy.
       public static string HAUserLevel = @"user_level";
       public static string HAIsFullLevel = @"is_full_level";
    }

}
